@using Tres.Smss.Services
@using Tres.Smss.Models

@namespace Tres.Smss.Modules
@inherits ModuleBase
@inject NavigationManager NavigationManager
@inject HttpClient http
@inject SiteState sitestate

@if (_Smss == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ActionLink Action="Add" Security="SecurityAccessLevel.Edit" Text="Add Sms" />
    <br />
    <br />
    @if (@_Smss.Count != 0)
    {
        <Pager Items="@_Smss" Format="Grid">
            <Header>
                <div class="col"><strong>Smss</strong></div>
            </Header>
            <Row>
                <div class="col">
                    <ActionLink Action="Edit" Parameters="@($"id=" + context.SmsId.ToString())" />
                    <ActionDialog Header="Delete Sms" Message="@("Are You Sure You Wish To Delete The " + context.Name + " Sms?")" Action="Delete" Security="SecurityAccessLevel.Edit" Class="btn btn-danger" OnClick="@(async () => await Delete(context))" />
                    @context.Name
                </div>
            </Row>
        </Pager>
    }
    else
    {
        <p>No Smss To Display</p>
    }
}

<hr />
Sms Module Created Successfully. Use Edit Mode To Add A Sms. You Can Access The Files At The Following Locations:<br /><br />
C:\Users\mc\source\open\Tres.Smss.Module\Client\<br />
- Tres.Smss.Module.Client.csproj - client project<br />
- _Imports.razor - global imports for module components<br />
- Edit.razor - component for adding or editing content<br />
- Index.razor - main component for your module **the content you are reading is in this file**<br />
- ModuleInfo.cs - implements IModule interface to provide configuration settings for your module<br />
- Settings.razor - component for managing module settings<br />
- Services\ISmsService.cs - interface for defining service API methods<br />
- Services\SmsService.cs - implements service API interface methods<br /><br />
C:\Users\mc\source\open\Tres.Smss.Module\Package\<br />
- Tres.Smss.Module.nuspec - nuget manifest for packaging module<br />
- Tres.Smss.Module.Package.csproj - packaging project<br />
- debug.cmd - copies assemblies to Oqtane bin folder when in Debug mode<br />
- release.cmd - creates nuget package and deploys to Oqtane wwwroot/modules folder when in Release mode<br /><br />
C:\Users\mc\source\open\Tres.Smss.Module\Server\<br />
- Tres.Smss.Module.Server.csproj - server project<br />
- Controllers\SmsController.cs - API methods implemented using a REST pattern<br />
- Manager\SmsManager.cs - implements optional module interfaces for features such as import/export of content<br />
- Repository\ISmsRepository.cs - interface for defining repository methods<br />
- Repository\SmsRespository.cs - implements repository interface methods for data access using EF Core<br />
- Repository\SmsContext.cs - provides a DB Context for data access<br />
- Scripts\01.00.00.sql - database schema definition<br /><br />
C:\Users\mc\source\open\Tres.Smss.Module\Shared\<br />
- Tres.Smss.Module.Shared.csproj - shared project<br />
- Models\Sms.cs - model definition<br /><br />

@code {
    ISmsService SmsService;
    List<Sms> _Smss;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            SmsService = new SmsService(http, sitestate, NavigationManager);
            _Smss = await SmsService.GetSmssAsync(ModuleState.ModuleId);
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Loading Sms {Error}", ex.Message);
            AddModuleMessage("Error Loading Sms", MessageType.Error);
        }
    }

    private async Task Delete(Sms Sms)
    {
        try
        {
            await SmsService.DeleteSmsAsync(Sms.SmsId);
            await logger.LogInformation("Sms Deleted {Sms}", Sms);
            _Smss = await SmsService.GetSmssAsync(ModuleState.ModuleId);
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Deleting Sms {Sms} {Error}", Sms, ex.Message);
            AddModuleMessage("Error Deleting Sms", MessageType.Error);
        }
    }
}